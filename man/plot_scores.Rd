% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/biclustering.R
\name{plot_scores}
\alias{plot_scores}
\title{Plot clustering scores}
\usage{
plot_scores(
  X,
  min_clusters = 2,
  max_clusters = 10,
  score_a = "ave.within.cluster.ss",
  score_b = "ch",
  score_seed = NULL,
  ...
)
}
\arguments{
\item{X}{a numeric matrix or a data frame of numeric values.}

\item{min_clusters}{positive integer >= 2. The minimum amount of clusters to try.}

\item{max_clusters}{positive integer. The maximum amount of clusters to try.}

\item{score_a}{character string specifying the first score to be plotted. Defaults to "ave.within.cluster.ss" (average within-cluster sum of squares). Acceptable inputs are e.g. "avg.silwidth", "within.cluster.ss", "ch", and the other scores returned by fpc::cluster.stats.}

\item{score_b}{character string specifying the second score to be plotted. Defaults to "ch" (calinski-harabasz score).}

\item{score_seed}{NULL or a single value, optional seed number for reproducible results}

\item{...}{other arguments are passed on to jhbiclusters::spectral_coclustering.}
}
\value{
a list with length 2:
row_scores: clustering scores along the rows, for cluster numbers min_clusters:max_clusters
col_scores: clustering scores along the columns
}
\description{
Runs the spectral co-clustering on matrix X using the selected cluster amounts, runs cluster scoring, and plots clustering scores for both dimensions.
}
\details{
Determining the optimal number of biclusters in absence of \emph{a priori} knowledge can be done by assessing each dimension (rows, columns)
separately using convenient metrics. This function uses the fpc::cluster_stats() function to run scoring across cluster numbers min_clusters:max_clusters for both dimensions.
}
\examples{
{# generate data and visualize the clustering scores
data <- generate_example_matrix()
scores <- plot_scores(X = data$randomized, score_a = "ch", score_b = "avg.silwidth", score_seed = 0)
}

}
